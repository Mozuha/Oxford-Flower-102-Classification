{"version":3,"sources":["components/prediction.tsx","categories.tsx","components/category.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","display","flexDirection","container","padding","margin","alignItems","button","img","border","maxWidth","Predict","classes","useState","base64Image","setBase64Image","predResult","setPredResult","image","setImage","isLoading","setIsLoading","Container","className","component","Button","variant","style","type","accept","onChange","event","file","target","files","reader","FileReader","onload","dataURL","result","replace","readAsDataURL","previewFile","onClick","message","hasError","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","catch","error","console","CircularProgress","color","size","src","categories","textField","marginTop","width","borderRadius","boxShadow","outline","marginBottom","textAlign","grid","justifyContent","listStyleType","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","paddingInlineStart","paper","PageCategories","search","setSearch","items","filter","toLowerCase","includes","map","index","Grid","key","Paper","TextField","placeholder","keyword","value","searchSpace","fontFamily","minWidth","App","to","exact","path","ReactDOM","render","document","getElementById"],"mappings":"0RAGMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,cACTC,cAAe,UAEnBC,UAAW,CACPC,QAAS,UACTC,OAAQ,OACRC,WAAY,UAEhBC,OAAQ,CACJF,OAAQ,OAEZG,IAAK,CACDC,OAAQ,OACRC,SAAU,SAwEHC,EApEC,WACZ,IAAMC,EAAUd,IADE,EAGoBe,mBAAiB,IAHrC,mBAGXC,EAHW,KAGEC,EAHF,OAIkBF,mBAAiB,IAJnC,mBAIXG,EAJW,KAICC,EAJD,OAKQJ,mBAAiB,IALzB,mBAKXK,EALW,KAKJC,EALI,OAMgBN,oBAAkB,GANlC,mBAMXO,EANW,KAMAC,EANA,KAkDlB,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAWX,EAAQZ,MAC1B,gDACA,kBAACsB,EAAA,EAAD,CAAWE,UAAU,OAAOD,UAAWX,EAAQT,WAC3C,kBAACsB,EAAA,EAAD,CAAQC,QAAQ,WAAWF,UAAU,QAAQD,UAAWX,EAAQL,QAAhE,+BAEI,2BAAOoB,MAAO,CAAE1B,QAAS,QAAU2B,KAAK,OAAOC,OAAO,UAAUC,SAAU,SAACC,GAAD,OAhDtE,SAACA,GACjB,IACMC,EADSD,EAAME,OACDC,MAAO,GACrBC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WAEZ,IAAMC,EAAUH,EAAOI,OACvBpB,EAASmB,GACTvB,EAAeuB,EAAQE,QAAQ,kCAAmC,MAEtEL,EAAOM,cAAcT,GAqC4EU,CAAYX,OAErG,kBAACN,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWX,EAAQL,OAAQoC,QApC7C,WACjB,IAAMC,EAAU,CACZ1B,MAAOJ,EACP+B,UAAU,GAGRC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,IAGzBvB,GAAa,GACb+B,MAAM,eAAgBN,GACjBO,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACFvC,EAAcuC,GACdnC,GAAa,MAEhBoC,OAAM,SAAAC,GACHd,EAAQC,UAAW,EACnBxB,GAAa,GACbsC,QAAQD,MAAMA,QAYd,YAEJ,kBAACpC,EAAA,EAAD,CAAWC,UAAWX,EAAQT,WAC1B,4BAAKiB,EAAY,4CAAiB,kBAACwC,EAAA,EAAD,CAAkBC,MAAM,UAAUC,KAAM,MAAgB,yCAAe9C,IACzG,yBAAKO,UAAWX,EAAQJ,IAAKuD,IAAK7C,OCqBnC8C,EAzGI,CACf,mBACA,YACA,YACA,SACA,YACA,iBACA,mBACA,eACA,WACA,mBACA,qBACA,mBACA,kBACA,iBACA,mBACA,gBACA,WACA,YACA,mBACA,WACA,aACA,mBACA,cACA,YACA,mBACA,WACA,cACA,YACA,mBACA,aACA,WACA,WACA,cACA,mBACA,YACA,WACA,aACA,aACA,eACA,QACA,UACA,WACA,wBACA,gBACA,eACA,iBACA,mBACA,4BACA,WACA,cACA,mBACA,cACA,cACA,QACA,mBACA,WACA,SACA,WACA,gBACA,kBACA,YACA,cACA,gBACA,gBACA,eACA,cACA,iBACA,cACA,gBACA,UACA,oBACA,gBACA,qBACA,YACA,UACA,2BACA,oBACA,aACA,OACA,uBACA,aACA,aACA,aACA,gBACA,gBACA,mBACA,YACA,YACA,gBACA,aACA,cACA,aACA,YACA,cACA,aACA,kBACA,aACA,aACA,aACA,aACA,aACA,e,wBClGElE,EAAYC,YAAW,CACzBkE,UAAW,CACP7D,QAAS,UACTC,OAAQ,iBACR6D,UAAW,2BACXC,MAAO,QACPC,aAAc,MACd3D,OAAQ,MACR4D,UAAW,gBACXC,QAAS,GAEbnE,UAAW,CAEPkE,UAAW,mCACXjE,QAAS,0CACTC,OAAQ,2BACRkE,aAAc,2BACdC,UAAW,SACXtE,cAAe,UAEnBuE,KAAM,CACFxE,QAAS,cACTyE,eAAgB,gBAChBC,cAAe,OACftE,OAAQ,WACRuE,iBAAkB,QAClBC,eAAgB,QAChBC,kBAAmB,MACnBC,gBAAiB,MACjBC,mBAAoB,OAExBC,MAAO,CACHhF,QAAS,eACTG,QAAS,WACTC,OAAQ,MACRI,OAAQ,oBA6CDyE,EAzCQ,WACnB,IAAMtE,EAAUd,IADS,EAGGe,mBAAwB,IAH3B,mBAGlBsE,EAHkB,KAGVC,EAHU,KAUnBC,EAAQrB,EAAWsB,QAAO,SAAA9B,GAC5B,OAAe,OAAX2B,GAEK3B,EAAK+B,cAAcC,SAASL,EAAOI,eADjC/B,OACN,KAEFiC,KAAI,SAACjC,EAAMkC,GACV,OACI,kBAACC,EAAA,EAAD,CAAMpE,UAAWX,EAAQ6D,KAAOmB,IAAKF,GACjC,kBAACG,EAAA,EAAD,CAAOtE,UAAWX,EAAQqE,OACrBzB,OAMrB,OACI,kBAAClC,EAAA,EAAD,KACI,sDACA,kBAACwE,EAAA,EAAD,CACIpE,QAAQ,WACRE,KAAK,OACLL,UAAWX,EAAQqD,UACnB8B,YAAY,uBACZjE,SAAU,SAACC,GAAD,OA5BF,SAACA,GACjB,IAAMiE,EAAUjE,EAAME,OAAOgE,MAC7Bb,EAAUY,GA0BmBE,CAAYnE,MACrC,kBAACT,EAAA,EAAD,CAAWC,UAAWX,EAAQT,WACzBkF,KCvEXvF,EAAYC,YAAW,CACzBC,KAAM,CACFmG,WAAY,+BACZ3B,UAAW,UAEfjE,OAAQ,CACJF,OAAQ,MACRD,QAAS,WACTgG,SAAU,OACVnG,QAAS,kBA4BFoG,EAnBH,WACR,IAAMzF,EAAUd,IAEhB,OACI,kBAACwB,EAAA,EAAD,CAAWC,UAAWX,EAAQZ,MAC1B,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,CAAMsG,GAAG,KAAI,kBAAC7E,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWX,EAAQL,QAA9C,eACb,kBAAC,IAAD,CAAM+F,GAAG,aAAY,kBAAC7E,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWX,EAAQL,QAA9C,cAEzB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,aAAY,kBAAC,EAAD,WChC5CC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"js/main.707448a2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Container, Button, CircularProgress, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'inline-flex',\r\n        flexDirection: 'column',\r\n    },\r\n    container: {\r\n        padding: '2px 4px',\r\n        margin: '10px',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        margin: '5px',\r\n    },\r\n    img: {\r\n        border: 'none',\r\n        maxWidth: '70%',\r\n    }\r\n})\r\n\r\nconst Predict = () => {\r\n    const classes = useStyles()\r\n\r\n    const [base64Image, setBase64Image] = useState<string>('')\r\n    const [predResult, setPredResult] = useState<string>('')\r\n    const [image, setImage] = useState<string>('')\r\n    const [isLoading, setIsLoading] = useState<boolean>(false)\r\n    \r\n    const previewFile = (event: React.ChangeEvent) => {\r\n        const target = event.target as HTMLInputElement\r\n        const file = target.files![0]\r\n        const reader = new FileReader()\r\n        \r\n        reader.onload = () => {\r\n            // ArrayBuffer to String\r\n            const dataURL = reader.result as string\r\n            setImage(dataURL)\r\n            setBase64Image(dataURL.replace(/^data:image\\/(png|jpeg);base64,/, ''))\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const predictImage = () => {\r\n        const message = {\r\n            image: base64Image,\r\n            hasError: false\r\n        }\r\n        \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(message)\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        fetch('/api/predict', requestOptions)\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setPredResult(data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(error => {\r\n                message.hasError = true\r\n                setIsLoading(false)\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <h1>Image Prediction</h1>\r\n            <Container component='form' className={classes.container}>\r\n                <Button variant='outlined' component='label' className={classes.button}>\r\n                    Choose Image to be Predicted\r\n                    <input style={{ display: 'none' }} type='file' accept='image/*' onChange={(event) => previewFile(event)}/>\r\n                </Button>\r\n                <Button variant='outlined' className={classes.button} onClick={predictImage}>Predict</Button>\r\n            </Container>\r\n            <Container className={classes.container}>\r\n                <h3>{isLoading ? <span>This is... <CircularProgress color='inherit' size={15} /></span> : <span>This is {predResult}</span>}</h3>\r\n                <img className={classes.img} src={image} />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Predict\r\n","const categories = [\r\n    \"alpine sea holly\",\r\n    \"anthurium\", \r\n    \"artichoke\",\r\n    \"azalea\",\r\n    \"ball moss\", \r\n    \"balloon flower\",\r\n    \"bearberton daisy\",\r\n    \"bearded iris\",\r\n    \"bee balm\",\r\n    \"bird of paradise\",\r\n    \"bishop of llandaff\", \r\n    \"black-eyed susan\", \r\n    \"blackberry lily\",\r\n    \"blanket flower\", \r\n    \"bolero deep blue\",\r\n    \"bougainvillea\", \r\n    \"bromelia\", \r\n    \"buttercup\",\r\n    \"california poppy\",\r\n    \"camellia\",\r\n    \"canna lily\", \r\n    \"canterbury bells\",\r\n    \"cape flower\", \r\n    \"carnation\",\r\n    \"cautleya spicata\", \r\n    \"clematis\",\r\n    \"colt's foot\",\r\n    \"columbine\",\r\n    \"common dandelion\",\r\n    \"corn poppy\", \r\n    \"cyclamen\",\r\n    \"daffodil\",\r\n    \"desert rose\",\r\n    \"english marigold\",\r\n    \"fire lily\",\r\n    \"foxglove\",\r\n    \"frangipani\",\r\n    \"fritillary\",\r\n    \"garden phlox\",\r\n    \"gaula\",\r\n    \"gazania\", \r\n    \"geranium\",\r\n    \"giant white arum lily\",\r\n    \"globe thistle\",\r\n    \"globe-flower\", \r\n    \"grape hyacinth\",\r\n    \"great masterwort\",\r\n    \"hard-leaved pocket orchid\",\r\n    \"hibiscus\", \r\n    \"hippeastrum\",\r\n    \"japanese anemone\",\r\n    \"king protea\",\r\n    \"lenten rose\",\r\n    \"lotus\", \r\n    \"love in the mist\",\r\n    \"magnolia\",\r\n    \"mallow\",\r\n    \"marigold\",\r\n    \"mexican aster\", \r\n    \"mexican petunia\",\r\n    \"monkshood\",\r\n    \"moon orchid\",\r\n    \"morning glory\",\r\n    \"orange dahlia\", \r\n    \"osteospermum\",\r\n    \"oxeye daisy\",\r\n    \"passion flower\",\r\n    \"pelargonium\",\r\n    \"peruvian lily\", \r\n    \"petunia\",\r\n    \"pincushion flower\",\r\n    \"pink primrose\",\r\n    \"pink-yellow dahlia\", \r\n    \"poinsetia\",\r\n    \"primula\",\r\n    \"prince of wales feathers\",\r\n    \"purple coneflower\", \r\n    \"red ginger\",\r\n    \"rose\",\r\n    \"ruby-lipped cattleya\",\r\n    \"siam tulip\",\r\n    \"silverbush\", \r\n    \"snapdragon\",\r\n    \"spear thistle\",\r\n    \"spring crocus\",\r\n    \"stemless gentian\",\r\n    \"sunflower\", \r\n    \"sweet pea\",\r\n    \"sweet william\",\r\n    \"sword lily\",\r\n    \"thorn apple\",\r\n    \"tiger lily\", \r\n    \"toad lily\",\r\n    \"tree mallow\",\r\n    \"tree poppy\",\r\n    \"trumpet creeper\",\r\n    \"wallflower\", \r\n    \"water lily\",\r\n    \"watercress\",\r\n    \"wild pansy\", \r\n    \"windflower\", \r\n    \"yellow iris\"\r\n]\r\n\r\nexport default categories","import React, { useState } from 'react'\r\nimport categories from '../categories'\r\nimport { Container, Grid, Paper, TextField, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        padding: '1em 2em',\r\n        margin: 'var(--padding)',\r\n        marginTop: 'calc(var(--padding) * 2)',\r\n        width: '500px',\r\n        borderRadius: '2em',\r\n        border: '1em',\r\n        boxShadow: 'var(--shadow)',\r\n        outline: 0,\r\n    },\r\n    container: {\r\n        // backgroundColor: '#fff',\r\n        boxShadow: '0 1px 2px 1px rgba(0, 0, 0, 0.5)',\r\n        padding: 'var(--padding) calc(var(--padding) * 2)',\r\n        margin: 'calc(var(--padding) * 2)',\r\n        marginBottom: 'calc(var(--padding) * 2)',\r\n        textAlign: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    grid: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n        listStyleType: 'none',\r\n        margin: '5px auto',\r\n        marginBlockStart: '0.5em',\r\n        marginBlockEnd: '0.5em',\r\n        marginInlineStart: '0px',\r\n        marginInlineEnd: '0px',\r\n        paddingInlineStart: '5px',\r\n    },\r\n    paper: {\r\n        display: 'inline-block',\r\n        padding: '5px 10px',\r\n        margin: '5px',\r\n        border: '1px solid grey',\r\n    }\r\n})\r\n\r\nconst PageCategories = () => {\r\n    const classes = useStyles()\r\n\r\n    const [search, setSearch] = useState<string | null>('')\r\n\r\n    const searchSpace = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const keyword = event.target.value\r\n        setSearch(keyword)\r\n    }\r\n\r\n    const items = categories.filter(data => {\r\n        if (search === null)\r\n            return data\r\n        else if (data.toLowerCase().includes(search.toLowerCase()))\r\n            return data\r\n        }).map((data, index) => {\r\n            return (\r\n                <Grid className={classes.grid}  key={index}>\r\n                    <Paper className={classes.paper}>\r\n                        {data}\r\n                    </Paper>\r\n                </Grid>\r\n            )\r\n        })\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Categories Predictable</h1>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\" \r\n                className={classes.textField}\r\n                placeholder=\"Enter name of flower\" \r\n                onChange={(event) => searchSpace(event)} />\r\n            <Container className={classes.container}>\r\n                {items}\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PageCategories\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom'\r\nimport { Container, Button, makeStyles } from '@material-ui/core'\r\n\r\nimport Prediction from './components/prediction'\r\nimport Category from './components/category'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        fontFamily: 'Arial, Helvetica, sans-serif',\r\n        textAlign: 'center',\r\n    },\r\n    button: {\r\n        margin: '5px',\r\n        padding: '5px 10px',\r\n        minWidth: '80px',\r\n        display: 'inline-block',\r\n        // '&:active': {\r\n        //     backgroundColor: 'white',\r\n        //     boxShadow: 'var(--shadow)',\r\n        //     fontWeight: 'bold',\r\n        // }\r\n    }\r\n})\r\n\r\nconst App = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <BrowserRouter>\r\n                <nav>\r\n                    <Link to='/'><Button variant=\"outlined\" className={classes.button}>Prediction</Button></Link>\r\n                    <Link to='/category'><Button variant=\"outlined\" className={classes.button}>Category</Button></Link>\r\n                </nav>\r\n                <Switch>\r\n                    <Route exact path='/'><Prediction /></Route>\r\n                    <Route path='/category'><Category /></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}